name: Build and Push Docker Image

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    outputs:
      short-sha: ${{ steps.short-sha.outputs.value }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SHORT_SHA Environment Variable
        id: short-sha
        shell: bash
        run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.REPO_USER }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard:${{ steps.short-sha.outputs.value }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_SSH_KEY }}
          script: |

            # Navigate to app directory
            cd ${{ secrets.SERVER_APP_DIR }}

            # Get short hash from build job
            SHORT_HASH="${{ needs.build-and-push.outputs.short-sha }}"
            echo "SHORT_HASH: $SHORT_HASH"

            # Pull the Docker image
            docker pull ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard:$SHORT_HASH

            # Pull the Docker image
            docker pull ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard:$SHORT_HASH

            # Update docker-compose.yml with new image
            if sed -i "s|image: ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard:.*|image: ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard:$SHORT_HASH|" docker-compose.yml; then
              echo "docker-compose.yml updated successfully"
            else
              echo "ERROR: Failed to update docker-compose.yml"
              exit 1
            fi

            # Show the updated docker-compose
            echo "Updated docker-compose.yml:"
            grep "image:" docker-compose.yml

            # Restart services
            docker compose down
            sleep 2

            # Check if containers are actually down (max 5 attempts)
            ATTEMPTS=0
            while docker ps | grep -q "finance-dashboard" && [ $ATTEMPTS -lt 5 ]; do
              echo "Waiting for containers to stop completely... (attempt $((ATTEMPTS + 1))/5)"
              sleep 2
              ATTEMPTS=$((ATTEMPTS + 1))
            done

            if [ $ATTEMPTS -eq 5 ]; then
              echo "WARNING: Containers may not have stopped completely after 5 attempts"
            fi

            echo "All containers stopped, starting new ones..."
            docker compose up -d

            # Show running containers
            echo "Running containers:"
            docker ps

            # Cleanup old images (keep last 5)
            docker images ghcr.io/${{ secrets.REPO_USER }}/finance-dashboard --format "table {{.Tag}}\t{{.CreatedAt}}" | tail -n +6 | awk '{print $1}' | xargs -r docker rmi || true

            echo "Deployment completed successfully!"
